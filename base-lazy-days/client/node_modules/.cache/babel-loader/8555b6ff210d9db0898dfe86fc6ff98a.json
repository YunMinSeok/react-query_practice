{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\n// for when we need a query function for useQuery\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\nexport function useStaff() {\n  _s();\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const selectFn = useCallback(data => filterByTreatment(data, filter)[filter]);\n\n  // TODO: get data from server via useQuery\n  const fallback = [];\n  const {\n    data: staff = fallback\n  } = useQuery(queryKeys.staff, getStaff, {\n    select: filter === 'all' ? undefined : selectFn\n  });\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n_s(useStaff, \"H5iJbTq0KjuiK8q6TAQVwM4BZcE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useState","useCallback","useQuery","axiosInstance","queryKeys","filterByTreatment","getStaff","data","get","useStaff","filter","setFilter","selectFn","fallback","staff","select","undefined"],"sources":["/Users/yunminseok/Desktop/study/react-query_practice/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useState, useCallback } from 'react';\nimport { useQuery } from 'react-query';\n\nimport type { Staff } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\n// for when we need a query function for useQuery\nasync function getStaff(): Promise<Staff[]> {\n  const { data } = await axiosInstance.get('/staff');\n  return data;\n}\n\ninterface UseStaff {\n  staff: Staff[];\n  filter: string;\n  setFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport function useStaff(): UseStaff {\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n\n  const selectFn = useCallback(\n    (data) => filterByTreatment(data, filter)[filter],\n  );\n\n  // TODO: get data from server via useQuery\n  const fallback = [];\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff, {\n    select: filter === 'all' ? undefined : selectFn,\n  });\n\n  return { staff, filter, setFilter };\n}\n"],"mappings":";AAAA,SAAmCA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,QAAQ,QAAQ,aAAa;AAGtC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,iBAAiB,QAAQ,UAAU;;AAE5C;AACA,eAAeC,QAAQ,GAAqB;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,aAAa,CAACK,GAAG,CAAC,QAAQ,CAAC;EAClD,OAAOD,IAAI;AACb;AAQA,OAAO,SAASE,QAAQ,GAAa;EAAA;EACnC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,QAAQ,GAAGX,WAAW,CACzBM,IAAI,IAAKF,iBAAiB,CAACE,IAAI,EAAEG,MAAM,CAAC,CAACA,MAAM,CAAC,CAClD;;EAED;EACA,MAAMG,QAAQ,GAAG,EAAE;EACnB,MAAM;IAAEN,IAAI,EAAEO,KAAK,GAAGD;EAAS,CAAC,GAAGX,QAAQ,CAACE,SAAS,CAACU,KAAK,EAAER,QAAQ,EAAE;IACrES,MAAM,EAAEL,MAAM,KAAK,KAAK,GAAGM,SAAS,GAAGJ;EACzC,CAAC,CAAC;EAEF,OAAO;IAAEE,KAAK;IAAEJ,MAAM;IAAEC;EAAU,CAAC;AACrC;AAAC,GAfeF,QAAQ;EAAA,QAUaP,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}