{"ast":null,"code":"var _s = $RefreshSig$();\nimport jsonpatch from 'fast-json-patch';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\n\n// for when we need a server function\nasync function patchUserOnServer(newData, originalData) {\n  if (!newData || !originalData) return null;\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n\n  // send patched data to the server\n  const {\n    data\n  } = await axiosInstance.patch(`/user/${originalData.id}`, {\n    patch\n  }, {\n    headers: getJWTHeader(originalData)\n  });\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser() {\n  _s();\n  const {\n    user,\n    updateUser\n  } = useUser();\n\n  // TODO: replace with mutate function\n  const patchUser = newData => {\n    // nothing to see here\n  };\n  return patchUser;\n}\n_s(usePatchUser, \"GrAkLOK93jden7TqC8fz7XlBo2g=\", false, function () {\n  return [useUser];\n});","map":{"version":3,"names":["jsonpatch","axiosInstance","getJWTHeader","useUser","patchUserOnServer","newData","originalData","patch","compare","data","id","headers","user","usePatchUser","updateUser","patchUser"],"sources":["/Users/yunminseok/Desktop/study/react-query_practice/base-lazy-days/client/src/components/user/hooks/usePatchUser.ts"],"sourcesContent":["import jsonpatch from 'fast-json-patch';\nimport { useMutation, UseMutateFunction } from 'react-query';\n\nimport type { User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\n\n// for when we need a server function\nasync function patchUserOnServer(\n  newData: User | null,\n  originalData: User | null,\n): Promise<User | null> {\n  if (!newData || !originalData) return null;\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n\n  // send patched data to the server\n  const { data } = await axiosInstance.patch(\n    `/user/${originalData.id}`,\n    { patch },\n    {\n      headers: getJWTHeader(originalData),\n    },\n  );\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser(): (newData: User | null) => void {\n  const { user, updateUser } = useUser();\n\n  // TODO: replace with mutate function\n  const patchUser = (newData: User | null) => {\n    // nothing to see here\n  };\n\n  return patchUser;\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,iBAAiB;AAIvC,SAASC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AACpE,SAASC,OAAO,QAAQ,WAAW;;AAEnC;AACA,eAAeC,iBAAiB,CAC9BC,OAAoB,EACpBC,YAAyB,EACH;EACtB,IAAI,CAACD,OAAO,IAAI,CAACC,YAAY,EAAE,OAAO,IAAI;EAC1C;EACA,MAAMC,KAAK,GAAGP,SAAS,CAACQ,OAAO,CAACF,YAAY,EAAED,OAAO,CAAC;;EAEtD;EACA,MAAM;IAAEI;EAAK,CAAC,GAAG,MAAMR,aAAa,CAACM,KAAK,CACvC,SAAQD,YAAY,CAACI,EAAG,EAAC,EAC1B;IAAEH;EAAM,CAAC,EACT;IACEI,OAAO,EAAET,YAAY,CAACI,YAAY;EACpC,CAAC,CACF;EACD,OAAOG,IAAI,CAACG,IAAI;AAClB;;AAEA;AACA,OAAO,SAASC,YAAY,GAAmC;EAAA;EAC7D,MAAM;IAAED,IAAI;IAAEE;EAAW,CAAC,GAAGX,OAAO,EAAE;;EAEtC;EACA,MAAMY,SAAS,GAAIV,OAAoB,IAAK;IAC1C;EAAA,CACD;EAED,OAAOU,SAAS;AAClB;AAAC,GATeF,YAAY;EAAA,QACGV,OAAO;AAAA"},"metadata":{},"sourceType":"module"}